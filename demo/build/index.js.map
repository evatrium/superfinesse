{"version":3,"file":"index.js","sources":["../../src/index.js","../src/index.js"],"sourcesContent":["const RECYCLED_NODE = 1,\n    TEXT_NODE = 3,\n    EMPTY_OBJ = {},\n    EMPTY_ARR = [],\n    map = EMPTY_ARR.map,\n    IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i,\n    isArray = Array.isArray,\n    d = document,\n\n    eventProxy = function (e) {\n        return this.__ev[e.type](e);\n    },\n\n    setStyle = (style, key, value) => {\n        if (key[0] === '-') style.setProperty(key, value);\n        else style[key] = typeof value === 'number'\n        && IS_NON_DIMENSIONAL.test(key) === false ? value + 'px' : value == null ? '' : value;\n    },\n    // preact inspired setProperty\n    setProperty = (dom, name, value, oldValue, isSvg, _style, _newHTML) => {\n        if (isSvg) {\n            if (name === 'className') name = 'class';\n        } else if (name === 'class') name = 'className';\n        if (name === 'key' || name === 'children') {\n        } else if (name === 'style') {\n            _style = dom.style;\n            if (typeof value === 'string') _style.cssText = value;\n            else {\n                if (typeof oldValue === 'string') (_style.cssText = '', oldValue = null);\n                if (oldValue) for (let i in oldValue) if (!(value && i in value)) setStyle(_style, i, '');\n                if (value) for (let i in value) if (!oldValue || value[i] !== oldValue[i]) setStyle(_style, i, value[i]);\n            }\n        } else if (name[0] === 'o' && name[1] === 'n') {\n            let useCapture = name !== (name = name.replace(/Capture$/, '')),\n                nameLower = name.toLowerCase();\n            name = (nameLower in dom ? nameLower : name).slice(2);\n            if (value) {\n                if (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n                (dom.__ev || (dom.__ev = {}))[name] = value;\n            } else dom.removeEventListener(name, eventProxy, useCapture);\n        } else if (name === 'dangerouslySetInnerHTML') {\n            if (value || oldValue) {\n                if (!value || !oldValue || value.__html != oldValue.__html) {\n                    dom.innerHTML = (value && value.__html) || '';\n                }\n                if (value) return true\n            }\n        } else if (!(['list', 'tagName', 'form', 'type', 'size'].includes(name)) && !isSvg && name in dom) {\n            dom[name] = value == null ? '' : value;\n        } else if (typeof value !== 'function') {\n            if (name !== (name = name.replace(/^xlink:?/, ''))) {\n                if (value == null || value === false) {\n                    dom.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n                } else dom.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n            } else if (value == null || (value === false && !/^ar/.test(name))) dom.removeAttribute(name);\n            else dom.setAttribute(name, value);\n        }\n    },\n\n    diffProps = (dom, newProps, oldProps, isSvg, _skipDiffChildren) => {\n        let i;\n        for (i in oldProps) if (!(i in newProps)) {\n            if (setProperty(dom, i, null, oldProps[i], isSvg)) _skipDiffChildren = true;\n        }\n        for (i in newProps) if (i !== 'value' && i !== 'checked' && oldProps[i] !== newProps[i]) {\n            if (setProperty(dom, i, newProps[i], oldProps[i], isSvg)) _skipDiffChildren = true;\n        }\n        return _skipDiffChildren\n    },\n\n    getKey = (vnode) => vnode == null ? null : vnode.key,\n\n    patchNode = (parent, node, oldVNode, newVNode, isSvg) => {\n        if (oldVNode === newVNode) {\n            console.log('same vnode', oldVNode)\n        } else if (\n            oldVNode != null &&\n            oldVNode.type === TEXT_NODE &&\n            newVNode.type === TEXT_NODE\n        ) {\n            if (oldVNode.name !== newVNode.name) node.nodeValue = newVNode.name\n        } else if (oldVNode == null || oldVNode.name !== newVNode.name) {\n            node = parent.insertBefore(createNode(newVNode, isSvg), node)\n            if (oldVNode != null) {\n                parent.removeChild(oldVNode.node)\n            }\n        } else {\n            let tmpVKid, oldVKid,\n                oldKey, newKey,\n                oldVProps = oldVNode.props,\n                newVProps = newVNode.props,\n                oldVKids = oldVNode.children,\n                newVKids = newVNode.children,\n                oldHead = 0,\n                newHead = 0,\n                oldTail = oldVKids.length - 1,\n                newTail = newVKids.length - 1;\n\n            isSvg = isSvg || newVNode.name === \"svg\"\n\n            if (diffProps(node, newVProps, oldVProps, isSvg)) {\n                return (newVNode.node = node);\n            }\n\n            while (newHead <= newTail && oldHead <= oldTail) {\n                if (\n                    (oldKey = getKey(oldVKids[oldHead])) == null ||\n                    oldKey !== getKey(newVKids[newHead])\n                ) {\n                    break\n                }\n                patchNode(\n                    node,\n                    oldVKids[oldHead].node,\n                    oldVKids[oldHead++],\n                    newVKids[newHead++],\n                    isSvg\n                )\n            }\n\n            while (newHead <= newTail && oldHead <= oldTail) {\n                if (\n                    (oldKey = getKey(oldVKids[oldTail])) == null ||\n                    oldKey !== getKey(newVKids[newTail])\n                ) {\n                    break\n                }\n\n                patchNode(\n                    node,\n                    oldVKids[oldTail].node,\n                    oldVKids[oldTail--],\n                    newVKids[newTail--],\n                    isSvg\n                )\n            }\n\n            if (oldHead > oldTail) {\n                while (newHead <= newTail) {\n                    node.insertBefore(\n                        createNode(newVKids[newHead++], isSvg),\n                        (oldVKid = oldVKids[oldHead]) && oldVKid.node\n                    )\n                }\n            } else if (newHead > newTail) {\n                while (oldHead <= oldTail) {\n                    node.removeChild(oldVKids[oldHead++].node)\n                }\n            } else {\n                for (var i = oldHead, keyed = {}, newKeyed = {}; i <= oldTail; i++) {\n                    if ((oldKey = oldVKids[i].key) != null) {\n                        keyed[oldKey] = oldVKids[i]\n                    }\n                }\n\n                while (newHead <= newTail) {\n                    oldKey = getKey((oldVKid = oldVKids[oldHead]))\n                    newKey = getKey(newVKids[newHead])\n\n                    if (\n                        newKeyed[oldKey] ||\n                        (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))\n                    ) {\n                        if (oldKey == null) {\n                            node.removeChild(oldVKid.node)\n                        }\n                        oldHead++\n                        continue\n                    }\n\n                    if (newKey == null || oldVNode.type === RECYCLED_NODE) {\n                        if (oldKey == null) {\n                            patchNode(\n                                node,\n                                oldVKid && oldVKid.node,\n                                oldVKid,\n                                newVKids[newHead],\n                                isSvg\n                            )\n                            newHead++\n                        }\n                        oldHead++\n                    } else {\n                        if (oldKey === newKey) {\n                            patchNode(node, oldVKid.node, oldVKid, newVKids[newHead], isSvg)\n                            newKeyed[newKey] = true\n                            oldHead++\n                        } else {\n                            if ((tmpVKid = keyed[newKey]) != null) {\n                                patchNode(\n                                    node,\n                                    node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),\n                                    tmpVKid,\n                                    newVKids[newHead],\n                                    isSvg\n                                )\n                                newKeyed[newKey] = true\n                            } else {\n                                patchNode(\n                                    node,\n                                    oldVKid && oldVKid.node,\n                                    null,\n                                    newVKids[newHead],\n                                    isSvg\n                                )\n                            }\n                        }\n                        newHead++\n                    }\n                }\n\n                while (oldHead <= oldTail) {\n                    if (getKey((oldVKid = oldVKids[oldHead++])) == null) {\n                        node.removeChild(oldVKid.node)\n                    }\n                }\n\n                for (var i in keyed) {\n                    if (newKeyed[i] == null) {\n                        node.removeChild(keyed[i].node)\n                    }\n                }\n            }\n        }\n\n        return (newVNode.node = node)\n    },\n\n    createNode = (vnode, isSvg) => {\n        var node = vnode.type === TEXT_NODE\n            ? d.createTextNode(vnode.name)\n            : (isSvg = isSvg || vnode.name === \"svg\")\n                ? d.createElementNS(\"http://www.w3.org/2000/svg\", vnode.name)\n                : d.createElement(vnode.name);\n        diffProps(node, vnode.props, {}, isSvg);\n        for (var i = 0, len = vnode.children.length; i < len; i++) {\n            node.appendChild(createNode(vnode.children[i], isSvg))\n        }\n        return (vnode.node = node)\n    },\n\n    createVNode = (name, props, children, node, key, type) => ({\n        name: name,\n        props: props,\n        children: children,\n        node: node,\n        type: type,\n        key: key,\n    }),\n\n    createTextVNode = (value, node) => createVNode(value, EMPTY_OBJ, EMPTY_ARR, node, null, TEXT_NODE),\n\n    recycleNode = (node, parent) => {\n        return node.nodeType === TEXT_NODE\n            ? createTextVNode(node.nodeValue, node)\n            : createVNode(\n                node.nodeName.toLowerCase(),\n                EMPTY_OBJ,\n                map.call(node.childNodes, recycleNode),\n                node,\n                null,\n                RECYCLED_NODE\n            )\n    },\n\n    Fragment = (props) => props.children,\n\n    render = (vdom, node, options) => {\n        let oldVDom = node.vdom || recycleNode(node);\n\n        vdom = createVNode(// this enables the use of a root fragment\n            oldVDom.name,\n            EMPTY_OBJ,\n            [].concat(vdom),\n            oldVDom.node\n        );\n        return ((node = patchNode(\n            node.parentNode,\n            node,\n            oldVDom,\n            vdom\n        )).vdom = vdom), node\n    },\n\n    mount = (vdom, node) => {\n        if (!isArray(vdom)) vdom = [vdom];\n        for (var i = vdom.length; i--;) node.insertBefore(createNode(vdom[i]), node.firstChild)\n    },\n\n    h = function (name, props) {\n        for (var vnode, rest = [], children = [], i = arguments.length; i-- > 2;) rest.push(arguments[i]);\n        if ((props = props == null ? {} : props).children != null) {\n            if (rest.length <= 0) rest.push(props.children);\n            delete props.children;\n        }\n        while (rest.length > 0) {\n            if (isArray((vnode = rest.pop()))) {\n                for (var i = vnode.length; i-- > 0;) rest.push(vnode[i])\n            } else if (vnode === false || vnode === true || vnode == null) {\n            } else children.push(typeof vnode === 'object' ? vnode : createTextVNode(vnode));\n        }\n        return typeof name === 'function'\n            ? (props.children = props.children || children) && name(props)\n            : createVNode(name, props, children, null, props.key)\n    };\n\nexport {h, render, Fragment, createNode, mount};","import {h, Fragment, render, mount} from '../../src';\n\nlet state = {count: 0};\n\n\nconst root = document.createElement(\"div\");\ndocument.body.appendChild(root);\n\n\nconst update = (newState) => {\n    state = {...state, ...newState};\n    render(<App/>, root);\n};\n\n\nconst Button = ({children, ...rest}) => {\n\n    return (\n        <button style={{\n            background: 'red',\n            height: 40 /*pixels/dimensional units inferred*/\n        }} {...rest}>\n            {children}\n        </button>\n    )\n};\n\nconst App = () => {\n\n    let {count} = state;\n\n    return (\n        <Fragment>\n\n            <h1>count: {count}</h1>\n\n            <Button onClick={() =>{\n                console.log('click')\n                update({count: count + 1})\n            }}>\n                click me\n            </Button>\n\n            <div dangerouslySetInnerHTML={{__html:`\n                <h2>just like preact, diffing children will be skipped here</h2>\n            `}}/>\n\n        </Fragment>\n    )\n};\n\nupdate();\n"],"names":["RECYCLED_NODE","TEXT_NODE","EMPTY_OBJ","EMPTY_ARR","map","IS_NON_DIMENSIONAL","isArray","Array","d","document","eventProxy","e","__ev","type","setStyle","style","key","value","setProperty","test","dom","name","oldValue","isSvg","_style","_newHTML","cssText","i","useCapture","replace","nameLower","toLowerCase","slice","addEventListener","removeEventListener","__html","innerHTML","includes","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","diffProps","newProps","oldProps","_skipDiffChildren","getKey","vnode","patchNode","parent","node","oldVNode","newVNode","console","log","nodeValue","insertBefore","createNode","removeChild","tmpVKid","oldVKid","oldKey","newKey","oldVProps","props","newVProps","oldVKids","children","newVKids","oldHead","newHead","oldTail","length","newTail","keyed","newKeyed","createTextNode","createElementNS","createElement","len","appendChild","createVNode","createTextVNode","recycleNode","nodeType","nodeName","call","childNodes","Fragment","render","vdom","options","oldVDom","concat","parentNode","h","rest","arguments","push","pop","state","count","root","body","update","newState","Button","background","height","App"],"mappings":"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"}